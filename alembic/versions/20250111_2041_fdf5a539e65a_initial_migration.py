"""Initial migration

Revision ID: fdf5a539e65a
Revises: 
Create Date: 2025-01-11 20:41:15.362002+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fdf5a539e65a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('creation_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('image_url', sa.Text(), nullable=True),
    sa.Column('icon_url', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('closed', sa.Boolean(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=True),
    sa.Column('is_new', sa.Boolean(), nullable=True),
    sa.Column('featured', sa.Boolean(), nullable=True),
    sa.Column('restricted', sa.Boolean(), nullable=True),
    sa.Column('liquidity', sa.Numeric(), nullable=True),
    sa.Column('volume', sa.Numeric(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('competitive', sa.Numeric(), nullable=True),
    sa.Column('enable_order_book', sa.Boolean(), nullable=True),
    sa.Column('neg_risk', sa.Boolean(), nullable=True),
    sa.Column('neg_risk_market_id', sa.String(), nullable=True),
    sa.Column('comment_count', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_active'), 'events', ['active'], unique=False)
    op.create_index(op.f('ix_events_closed'), 'events', ['closed'], unique=False)
    op.create_index(op.f('ix_events_slug'), 'events', ['slug'], unique=False)
    op.create_table('markets',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('event_id', sa.String(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('condition_id', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('resolution_source', sa.Text(), nullable=True),
    sa.Column('start_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('image_url', sa.Text(), nullable=True),
    sa.Column('icon_url', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('volume', sa.Numeric(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('closed', sa.Boolean(), nullable=True),
    sa.Column('market_maker_address', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('closed_time', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('is_new', sa.Boolean(), nullable=True),
    sa.Column('featured', sa.Boolean(), nullable=True),
    sa.Column('submitted_by', sa.String(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=True),
    sa.Column('resolved_by', sa.String(), nullable=True),
    sa.Column('restricted', sa.Boolean(), nullable=True),
    sa.Column('group_item_title', sa.String(), nullable=True),
    sa.Column('group_item_threshold', sa.Numeric(), nullable=True),
    sa.Column('question_id', sa.String(), nullable=True),
    sa.Column('uma_end_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('enable_order_book', sa.Boolean(), nullable=True),
    sa.Column('order_price_min_tick_size', sa.Numeric(), nullable=True),
    sa.Column('order_min_size', sa.Numeric(), nullable=True),
    sa.Column('uma_resolution_status', sa.String(), nullable=True),
    sa.Column('volume_num', sa.Numeric(), nullable=True),
    sa.Column('end_date_iso', sa.Date(), nullable=True),
    sa.Column('start_date_iso', sa.Date(), nullable=True),
    sa.Column('has_reviewed_dates', sa.Boolean(), nullable=True),
    sa.Column('uma_bond', sa.Numeric(), nullable=True),
    sa.Column('uma_reward', sa.Numeric(), nullable=True),
    sa.Column('fpmm_live', sa.Boolean(), nullable=True),
    sa.Column('volume_clob', sa.Numeric(), nullable=True),
    sa.Column('accepting_orders', sa.Boolean(), nullable=True),
    sa.Column('neg_risk', sa.Boolean(), nullable=True),
    sa.Column('neg_risk_market_id', sa.String(), nullable=True),
    sa.Column('neg_risk_request_id', sa.String(), nullable=True),
    sa.Column('ready', sa.Boolean(), nullable=True),
    sa.Column('funded', sa.Boolean(), nullable=True),
    sa.Column('cyom', sa.Boolean(), nullable=True),
    sa.Column('pager_duty_notification_enabled', sa.Boolean(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_markets_active'), 'markets', ['active'], unique=False)
    op.create_index(op.f('ix_markets_closed'), 'markets', ['closed'], unique=False)
    op.create_index(op.f('ix_markets_condition_id'), 'markets', ['condition_id'], unique=False)
    op.create_index(op.f('ix_markets_event_id'), 'markets', ['event_id'], unique=False)
    op.create_index(op.f('ix_markets_slug'), 'markets', ['slug'], unique=False)
    op.create_table('clob_rewards',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('market_id', sa.String(), nullable=False),
    sa.Column('condition_id', sa.String(), nullable=False),
    sa.Column('asset_address', sa.String(), nullable=False),
    sa.Column('rewards_amount', sa.Numeric(), nullable=True),
    sa.Column('rewards_daily_rate', sa.Numeric(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['market_id'], ['markets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clob_rewards_market_id'), 'clob_rewards', ['market_id'], unique=False)
    op.create_table('outcomes',
    sa.Column('clob_token_id', sa.String(), nullable=False),
    sa.Column('market_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['market_id'], ['markets.id'], ),
    sa.PrimaryKeyConstraint('clob_token_id')
    )
    op.create_index(op.f('ix_outcomes_clob_token_id'), 'outcomes', ['clob_token_id'], unique=False)
    op.create_index(op.f('ix_outcomes_market_id'), 'outcomes', ['market_id'], unique=False)
    op.create_table('book_messages',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('clob_token_id', sa.String(), nullable=False),
    sa.Column('asset_id', sa.String(), nullable=False),
    sa.Column('market', sa.String(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('hash', sa.String(), nullable=True),
    sa.Column('buys', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('sells', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['clob_token_id'], ['outcomes.clob_token_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_book_messages_clob_token_id'), 'book_messages', ['clob_token_id'], unique=False)
    op.create_index(op.f('ix_book_messages_market'), 'book_messages', ['market'], unique=False)
    op.create_index(op.f('ix_book_messages_timestamp'), 'book_messages', ['timestamp'], unique=False)
    op.create_table('price_change_messages',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('clob_token_id', sa.String(), nullable=False),
    sa.Column('asset_id', sa.String(), nullable=False),
    sa.Column('market', sa.String(), nullable=False),
    sa.Column('price', sa.Numeric(), nullable=False),
    sa.Column('size', sa.Numeric(), nullable=False),
    sa.Column('side', sa.String(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('hash', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['clob_token_id'], ['outcomes.clob_token_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_price_change_messages_clob_token_id'), 'price_change_messages', ['clob_token_id'], unique=False)
    op.create_index(op.f('ix_price_change_messages_market'), 'price_change_messages', ['market'], unique=False)
    op.create_index(op.f('ix_price_change_messages_timestamp'), 'price_change_messages', ['timestamp'], unique=False)
    op.create_table('tick_size_change_messages',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('clob_token_id', sa.String(), nullable=False),
    sa.Column('asset_id', sa.String(), nullable=False),
    sa.Column('market', sa.String(), nullable=False),
    sa.Column('old_tick_size', sa.Numeric(), nullable=False),
    sa.Column('new_tick_size', sa.Numeric(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['clob_token_id'], ['outcomes.clob_token_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tick_size_change_messages_clob_token_id'), 'tick_size_change_messages', ['clob_token_id'], unique=False)
    op.create_index(op.f('ix_tick_size_change_messages_market'), 'tick_size_change_messages', ['market'], unique=False)
    op.create_index(op.f('ix_tick_size_change_messages_timestamp'), 'tick_size_change_messages', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tick_size_change_messages_timestamp'), table_name='tick_size_change_messages')
    op.drop_index(op.f('ix_tick_size_change_messages_market'), table_name='tick_size_change_messages')
    op.drop_index(op.f('ix_tick_size_change_messages_clob_token_id'), table_name='tick_size_change_messages')
    op.drop_table('tick_size_change_messages')
    op.drop_index(op.f('ix_price_change_messages_timestamp'), table_name='price_change_messages')
    op.drop_index(op.f('ix_price_change_messages_market'), table_name='price_change_messages')
    op.drop_index(op.f('ix_price_change_messages_clob_token_id'), table_name='price_change_messages')
    op.drop_table('price_change_messages')
    op.drop_index(op.f('ix_book_messages_timestamp'), table_name='book_messages')
    op.drop_index(op.f('ix_book_messages_market'), table_name='book_messages')
    op.drop_index(op.f('ix_book_messages_clob_token_id'), table_name='book_messages')
    op.drop_table('book_messages')
    op.drop_index(op.f('ix_outcomes_market_id'), table_name='outcomes')
    op.drop_index(op.f('ix_outcomes_clob_token_id'), table_name='outcomes')
    op.drop_table('outcomes')
    op.drop_index(op.f('ix_clob_rewards_market_id'), table_name='clob_rewards')
    op.drop_table('clob_rewards')
    op.drop_index(op.f('ix_markets_slug'), table_name='markets')
    op.drop_index(op.f('ix_markets_event_id'), table_name='markets')
    op.drop_index(op.f('ix_markets_condition_id'), table_name='markets')
    op.drop_index(op.f('ix_markets_closed'), table_name='markets')
    op.drop_index(op.f('ix_markets_active'), table_name='markets')
    op.drop_table('markets')
    op.drop_index(op.f('ix_events_slug'), table_name='events')
    op.drop_index(op.f('ix_events_closed'), table_name='events')
    op.drop_index(op.f('ix_events_active'), table_name='events')
    op.drop_table('events')
    # ### end Alembic commands ### 